

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Apr 13 22:46:05 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 09/02/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     008F                     	;# 
    96     0090                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0095                     	;# 
   104     0096                     	;# 
   105     0097                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009A                     	;# 
   109     009B                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     0105                     	;# 
   115     0107                     	;# 
   116     0108                     	;# 
   117     0109                     	;# 
   118     010C                     	;# 
   119     010C                     	;# 
   120     010D                     	;# 
   121     010E                     	;# 
   122     010F                     	;# 
   123     0185                     	;# 
   124     0187                     	;# 
   125     0188                     	;# 
   126     0189                     	;# 
   127     018C                     	;# 
   128     018D                     	;# 
   129     0000                     	;# 
   130     0001                     	;# 
   131     0002                     	;# 
   132     0003                     	;# 
   133     0004                     	;# 
   134     0005                     	;# 
   135     0006                     	;# 
   136     0007                     	;# 
   137     0008                     	;# 
   138     0009                     	;# 
   139     000A                     	;# 
   140     000B                     	;# 
   141     000C                     	;# 
   142     000D                     	;# 
   143     000E                     	;# 
   144     000E                     	;# 
   145     000F                     	;# 
   146     0010                     	;# 
   147     0011                     	;# 
   148     0012                     	;# 
   149     0013                     	;# 
   150     0014                     	;# 
   151     0015                     	;# 
   152     0015                     	;# 
   153     0016                     	;# 
   154     0017                     	;# 
   155     0018                     	;# 
   156     0019                     	;# 
   157     001A                     	;# 
   158     001B                     	;# 
   159     001B                     	;# 
   160     001C                     	;# 
   161     001D                     	;# 
   162     001E                     	;# 
   163     001F                     	;# 
   164     0081                     	;# 
   165     0085                     	;# 
   166     0086                     	;# 
   167     0087                     	;# 
   168     0088                     	;# 
   169     0089                     	;# 
   170     008C                     	;# 
   171     008D                     	;# 
   172     008E                     	;# 
   173     008F                     	;# 
   174     0090                     	;# 
   175     0091                     	;# 
   176     0092                     	;# 
   177     0093                     	;# 
   178     0093                     	;# 
   179     0093                     	;# 
   180     0094                     	;# 
   181     0095                     	;# 
   182     0096                     	;# 
   183     0097                     	;# 
   184     0098                     	;# 
   185     0099                     	;# 
   186     009A                     	;# 
   187     009B                     	;# 
   188     009C                     	;# 
   189     009D                     	;# 
   190     009E                     	;# 
   191     009F                     	;# 
   192     0105                     	;# 
   193     0107                     	;# 
   194     0108                     	;# 
   195     0109                     	;# 
   196     010C                     	;# 
   197     010C                     	;# 
   198     010D                     	;# 
   199     010E                     	;# 
   200     010F                     	;# 
   201     0185                     	;# 
   202     0187                     	;# 
   203     0188                     	;# 
   204     0189                     	;# 
   205     018C                     	;# 
   206     018D                     	;# 
   207     0000                     	;# 
   208     0001                     	;# 
   209     0002                     	;# 
   210     0003                     	;# 
   211     0004                     	;# 
   212     0005                     	;# 
   213     0006                     	;# 
   214     0007                     	;# 
   215     0008                     	;# 
   216     0009                     	;# 
   217     000A                     	;# 
   218     000B                     	;# 
   219     000C                     	;# 
   220     000D                     	;# 
   221     000E                     	;# 
   222     000E                     	;# 
   223     000F                     	;# 
   224     0010                     	;# 
   225     0011                     	;# 
   226     0012                     	;# 
   227     0013                     	;# 
   228     0014                     	;# 
   229     0015                     	;# 
   230     0015                     	;# 
   231     0016                     	;# 
   232     0017                     	;# 
   233     0018                     	;# 
   234     0019                     	;# 
   235     001A                     	;# 
   236     001B                     	;# 
   237     001B                     	;# 
   238     001C                     	;# 
   239     001D                     	;# 
   240     001E                     	;# 
   241     001F                     	;# 
   242     0081                     	;# 
   243     0085                     	;# 
   244     0086                     	;# 
   245     0087                     	;# 
   246     0088                     	;# 
   247     0089                     	;# 
   248     008C                     	;# 
   249     008D                     	;# 
   250     008E                     	;# 
   251     008F                     	;# 
   252     0090                     	;# 
   253     0091                     	;# 
   254     0092                     	;# 
   255     0093                     	;# 
   256     0093                     	;# 
   257     0093                     	;# 
   258     0094                     	;# 
   259     0095                     	;# 
   260     0096                     	;# 
   261     0097                     	;# 
   262     0098                     	;# 
   263     0099                     	;# 
   264     009A                     	;# 
   265     009B                     	;# 
   266     009C                     	;# 
   267     009D                     	;# 
   268     009E                     	;# 
   269     009F                     	;# 
   270     0105                     	;# 
   271     0107                     	;# 
   272     0108                     	;# 
   273     0109                     	;# 
   274     010C                     	;# 
   275     010C                     	;# 
   276     010D                     	;# 
   277     010E                     	;# 
   278     010F                     	;# 
   279     0185                     	;# 
   280     0187                     	;# 
   281     0188                     	;# 
   282     0189                     	;# 
   283     018C                     	;# 
   284     018D                     	;# 
   285     0000                     	;# 
   286     0001                     	;# 
   287     0002                     	;# 
   288     0003                     	;# 
   289     0004                     	;# 
   290     0005                     	;# 
   291     0006                     	;# 
   292     0007                     	;# 
   293     0008                     	;# 
   294     0009                     	;# 
   295     000A                     	;# 
   296     000B                     	;# 
   297     000C                     	;# 
   298     000D                     	;# 
   299     000E                     	;# 
   300     000E                     	;# 
   301     000F                     	;# 
   302     0010                     	;# 
   303     0011                     	;# 
   304     0012                     	;# 
   305     0013                     	;# 
   306     0014                     	;# 
   307     0015                     	;# 
   308     0015                     	;# 
   309     0016                     	;# 
   310     0017                     	;# 
   311     0018                     	;# 
   312     0019                     	;# 
   313     001A                     	;# 
   314     001B                     	;# 
   315     001B                     	;# 
   316     001C                     	;# 
   317     001D                     	;# 
   318     001E                     	;# 
   319     001F                     	;# 
   320     0081                     	;# 
   321     0085                     	;# 
   322     0086                     	;# 
   323     0087                     	;# 
   324     0088                     	;# 
   325     0089                     	;# 
   326     008C                     	;# 
   327     008D                     	;# 
   328     008E                     	;# 
   329     008F                     	;# 
   330     0090                     	;# 
   331     0091                     	;# 
   332     0092                     	;# 
   333     0093                     	;# 
   334     0093                     	;# 
   335     0093                     	;# 
   336     0094                     	;# 
   337     0095                     	;# 
   338     0096                     	;# 
   339     0097                     	;# 
   340     0098                     	;# 
   341     0099                     	;# 
   342     009A                     	;# 
   343     009B                     	;# 
   344     009C                     	;# 
   345     009D                     	;# 
   346     009E                     	;# 
   347     009F                     	;# 
   348     0105                     	;# 
   349     0107                     	;# 
   350     0108                     	;# 
   351     0109                     	;# 
   352     010C                     	;# 
   353     010C                     	;# 
   354     010D                     	;# 
   355     010E                     	;# 
   356     010F                     	;# 
   357     0185                     	;# 
   358     0187                     	;# 
   359     0188                     	;# 
   360     0189                     	;# 
   361     018C                     	;# 
   362     018D                     	;# 
   363     001E                     _ADRESH	set	30
   364     001F                     _ADCON0bits	set	31
   365     0008                     _PORTD	set	8
   366     0009                     _PORTE	set	9
   367     009E                     _ADRESL	set	158
   368     009F                     _ADCON1bits	set	159
   369     0085                     _TRISAbits	set	133
   370     0089                     _TRISE	set	137
   371     0088                     _TRISD	set	136
   372     008F                     _OSCCONbits	set	143
   373     0188                     _ANSELbits	set	392
   374     0189                     _ANSELH	set	393
   375     0188                     _ANSEL	set	392
   376                           
   377                           	psect	cinit
   378     07FC                     start_initialization:	
   379                           ; #config settings
   380                           
   381     07FC                     __initialization:
   382     07FC                     end_of_initialization:	
   383                           ;End of C runtime variable initialization code
   384                           
   385     07FC                     __end_of__initialization:
   386     07FC  0183               	clrf	3
   387     07FD  120A  118A  2F1D   	ljmp	_main	;jump to C main() function
   388                           
   389                           	psect	cstackCOMMON
   390     0070                     __pcstackCOMMON:
   391     0070                     ?_config_HAL:
   392     0070                     ??_config_HAL:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0070                     ?_init_ADC:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0070                     ?_set_CHANNEL:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0070                     ??_set_CHANNEL:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0070                     ?_leer_ADC:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0070                     ?_main:	
   408                           ; 2 bytes @ 0x0
   409                           
   410     0070                     ?___lmul:	
   411                           ; 2 bytes @ 0x0
   412                           
   413     0070                     ?___lldiv:	
   414                           ; 4 bytes @ 0x0
   415                           
   416     0070                     ___lmul@multiplier:	
   417                           ; 4 bytes @ 0x0
   418                           
   419     0070                     ___lldiv@divisor:	
   420                           ; 4 bytes @ 0x0
   421                           
   422                           
   423                           ; 4 bytes @ 0x0
   424     0070                     	ds	1
   425     0071                     set_CHANNEL@channel:
   426                           
   427                           ; 1 bytes @ 0x1
   428     0071                     	ds	1
   429     0072                     ??_init_ADC:
   430     0072                     ??_leer_ADC:	
   431                           ; 1 bytes @ 0x2
   432                           
   433                           
   434                           ; 1 bytes @ 0x2
   435     0072                     	ds	2
   436     0074                     ___lmul@multiplicand:
   437     0074                     ___lldiv@dividend:	
   438                           ; 4 bytes @ 0x4
   439                           
   440                           
   441                           ; 4 bytes @ 0x4
   442     0074                     	ds	4
   443     0078                     ??___lmul:
   444     0078                     ??___lldiv:	
   445                           ; 1 bytes @ 0x8
   446                           
   447                           
   448                           ; 1 bytes @ 0x8
   449     0078                     	ds	1
   450     0079                     ___lmul@product:
   451     0079                     ___lldiv@quotient:	
   452                           ; 4 bytes @ 0x9
   453                           
   454                           
   455                           ; 4 bytes @ 0x9
   456     0079                     	ds	4
   457     007D                     ___lldiv@counter:
   458                           
   459                           ; 1 bytes @ 0xD
   460     007D                     	ds	1
   461     007E                     ??_main:
   462                           
   463                           	psect	cstackBANK0
   464     0020                     __pcstackBANK0:	
   465                           ; 1 bytes @ 0xE
   466                           
   467     0020                     leer_ADC@lectura:
   468                           
   469                           ; 2 bytes @ 0x0
   470     0020                     	ds	2
   471     0022                     leer_ADC@i:
   472                           
   473                           ; 2 bytes @ 0x2
   474     0022                     	ds	2
   475     0024                     main@temperatura:
   476                           
   477                           ; 4 bytes @ 0x4
   478     0024                     	ds	4
   479                           
   480                           	psect	maintext
   481     071D                     __pmaintext:	
   482 ;;
   483 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   484 ;;
   485 ;; *************** function _main *****************
   486 ;; Defined at:
   487 ;;		line 11 in file "newmain.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  temperatura     4    4[BANK0 ] unsigned long 
   492 ;; Return value:  Size  Location     Type
   493 ;;                  2   24[None  ] int 
   494 ;; Registers used:
   495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   496 ;; Tracked objects:
   497 ;;		On entry : B00/0
   498 ;;		On exit  : 300/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   501 ;;      Params:         0       0       0       0       0
   502 ;;      Locals:         0       4       0       0       0
   503 ;;      Temps:          0       0       0       0       0
   504 ;;      Totals:         0       4       0       0       0
   505 ;;Total ram usage:        4 bytes
   506 ;; Hardware stack levels required when called: 2
   507 ;; This function calls:
   508 ;;		___lldiv
   509 ;;		___lmul
   510 ;;		_config_HAL
   511 ;;		_init_ADC
   512 ;;		_leer_ADC
   513 ;; This function is called by:
   514 ;;		Startup code after reset
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518     071D                     _main:	
   519                           ;psect for function _main
   520                           
   521                           
   522                           ;newmain.c: 15: OSCCONbits.IRCF = 0b111;
   523                           
   524                           ;incstack = 0
   525                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   526     071D  3070               	movlw	112
   527     071E  1683               	bsf	3,5	;RP0=1, select bank1
   528     071F  048F               	iorwf	15,f	;volatile
   529                           
   530                           ;newmain.c: 17: config_HAL();
   531     0720  120A  118A  25ED  120A  118A  	fcall	_config_HAL
   532                           
   533                           ;newmain.c: 18: init_ADC();
   534     0725  120A  118A  2600  120A  118A  	fcall	_init_ADC
   535                           
   536                           ;newmain.c: 19: PORTE = 0x00;
   537     072A  1283               	bcf	3,5	;RP0=0, select bank0
   538     072B  1303               	bcf	3,6	;RP1=0, select bank0
   539     072C  0189               	clrf	9	;volatile
   540                           
   541                           ;newmain.c: 20: PORTD = 0x00;
   542     072D  0188               	clrf	8	;volatile
   543                           
   544                           ;newmain.c: 30: switch(temperatura)
   545     072E  2F63               	goto	l946
   546     072F                     l958:
   547                           
   548                           ;newmain.c: 33: PORTE |= 0x03;
   549     072F  3003               	movlw	3
   550     0730  00FF               	movwf	127
   551     0731  087F               	movf	127,w
   552     0732  0489               	iorwf	9,f	;volatile
   553     0733                     l960:
   554                           
   555                           ;newmain.c: 35: PORTE |= 0x01;
   556     0733  1409               	bsf	9,0	;volatile
   557     0734                     l962:
   558                           
   559                           ;newmain.c: 37: if(temperatura<9)
   560     0734  0827               	movf	main@temperatura+3,w
   561     0735  1D03               	btfss	3,2
   562     0736  2F46               	goto	l966
   563     0737  0826               	movf	main@temperatura+2,w
   564     0738  1D03               	btfss	3,2
   565     0739  2F46               	goto	l966
   566     073A  0825               	movf	main@temperatura+1,w
   567     073B  1D03               	btfss	3,2
   568     073C  2F46               	goto	l966
   569     073D  3009               	movlw	9
   570     073E  0224               	subwf	main@temperatura,w
   571     073F  1D03               	skipz
   572     0740  2F41               	goto	u363
   573     0741                     u363:
   574     0741  1803               	btfsc	3,0
   575     0742  2F46               	goto	l966
   576                           
   577                           ;newmain.c: 38: {;newmain.c: 39: PORTE = 0x00;
   578     0743  1283               	bcf	3,5	;RP0=0, select bank0
   579     0744  1303               	bcf	3,6	;RP1=0, select bank0
   580     0745  0189               	clrf	9	;volatile
   581     0746                     l966:
   582                           
   583                           ;newmain.c: 40: };newmain.c: 41: PORTD |= 0xFF;
   584     0746  30FF               	movlw	255
   585     0747  1283               	bcf	3,5	;RP0=0, select bank0
   586     0748  1303               	bcf	3,6	;RP1=0, select bank0
   587     0749  0088               	movwf	8	;volatile
   588     074A                     l968:
   589                           
   590                           ;newmain.c: 43: PORTD |= 0xFF>>1;
   591     074A  307F               	movlw	127
   592     074B  00FF               	movwf	127
   593     074C  087F               	movf	127,w
   594     074D  0488               	iorwf	8,f	;volatile
   595     074E                     l970:
   596                           
   597                           ;newmain.c: 45: PORTD |= 0xFF>>2;
   598     074E  303F               	movlw	63
   599     074F  00FF               	movwf	127
   600     0750  087F               	movf	127,w
   601     0751  0488               	iorwf	8,f	;volatile
   602     0752                     l972:
   603                           
   604                           ;newmain.c: 47: PORTD |= 0xFF>>3;
   605     0752  301F               	movlw	31
   606     0753  00FF               	movwf	127
   607     0754  087F               	movf	127,w
   608     0755  0488               	iorwf	8,f	;volatile
   609     0756                     l974:
   610                           
   611                           ;newmain.c: 49: PORTD |= 0xFF>>4;
   612     0756  300F               	movlw	15
   613     0757  00FF               	movwf	127
   614     0758  087F               	movf	127,w
   615     0759  0488               	iorwf	8,f	;volatile
   616     075A                     l976:
   617                           
   618                           ;newmain.c: 51: PORTD |= 0xFF>>5;
   619     075A  3007               	movlw	7
   620     075B  00FF               	movwf	127
   621     075C  087F               	movf	127,w
   622     075D  0488               	iorwf	8,f	;volatile
   623     075E                     l978:
   624                           
   625                           ;newmain.c: 53: PORTD |= 0xFF>>6;
   626     075E  3003               	movlw	3
   627     075F  00FF               	movwf	127
   628     0760  087F               	movf	127,w
   629     0761  0488               	iorwf	8,f	;volatile
   630     0762                     l980:
   631                           
   632                           ;newmain.c: 55: PORTD |= 0xFF>>7;
   633     0762  1408               	bsf	8,0	;volatile
   634     0763                     l946:	
   635                           ;newmain.c: 56: break;
   636                           
   637                           
   638                           ;newmain.c: 22: {;newmain.c: 23: temperatura = leer_ADC();
   639     0763  120A  118A  26BF  120A  118A  	fcall	_leer_ADC
   640     0768  0870               	movf	?_leer_ADC,w
   641     0769  00A4               	movwf	main@temperatura
   642     076A  0871               	movf	?_leer_ADC+1,w
   643     076B  00A5               	movwf	main@temperatura+1
   644     076C  3000               	movlw	0
   645     076D  1BA5               	btfsc	main@temperatura+1,7
   646     076E  30FF               	movlw	255
   647     076F  00A6               	movwf	main@temperatura+2
   648     0770  00A7               	movwf	main@temperatura+3
   649                           
   650                           ;newmain.c: 24: temperatura = temperatura*100;
   651     0771  0827               	movf	main@temperatura+3,w
   652     0772  00F3               	movwf	___lmul@multiplier+3
   653     0773  0826               	movf	main@temperatura+2,w
   654     0774  00F2               	movwf	___lmul@multiplier+2
   655     0775  0825               	movf	main@temperatura+1,w
   656     0776  00F1               	movwf	___lmul@multiplier+1
   657     0777  0824               	movf	main@temperatura,w
   658     0778  00F0               	movwf	___lmul@multiplier
   659     0779  3000               	movlw	0
   660     077A  00F7               	movwf	___lmul@multiplicand+3
   661     077B  3000               	movlw	0
   662     077C  00F6               	movwf	___lmul@multiplicand+2
   663     077D  3000               	movlw	0
   664     077E  00F5               	movwf	___lmul@multiplicand+1
   665     077F  3064               	movlw	100
   666     0780  00F4               	movwf	___lmul@multiplicand
   667     0781  120A  118A  2622  120A  118A  	fcall	___lmul
   668     0786  0873               	movf	?___lmul+3,w
   669     0787  00A7               	movwf	main@temperatura+3
   670     0788  0872               	movf	?___lmul+2,w
   671     0789  00A6               	movwf	main@temperatura+2
   672     078A  0871               	movf	?___lmul+1,w
   673     078B  00A5               	movwf	main@temperatura+1
   674     078C  0870               	movf	?___lmul,w
   675     078D  00A4               	movwf	main@temperatura
   676                           
   677                           ;newmain.c: 25: temperatura = temperatura/1023;
   678     078E  3000               	movlw	0
   679     078F  00F3               	movwf	___lldiv@divisor+3
   680     0790  3000               	movlw	0
   681     0791  00F2               	movwf	___lldiv@divisor+2
   682     0792  3003               	movlw	3
   683     0793  00F1               	movwf	___lldiv@divisor+1
   684     0794  30FF               	movlw	255
   685     0795  00F0               	movwf	___lldiv@divisor
   686     0796  0827               	movf	main@temperatura+3,w
   687     0797  00F7               	movwf	___lldiv@dividend+3
   688     0798  0826               	movf	main@temperatura+2,w
   689     0799  00F6               	movwf	___lldiv@dividend+2
   690     079A  0825               	movf	main@temperatura+1,w
   691     079B  00F5               	movwf	___lldiv@dividend+1
   692     079C  0824               	movf	main@temperatura,w
   693     079D  00F4               	movwf	___lldiv@dividend
   694     079E  120A  118A  2661  120A  118A  	fcall	___lldiv
   695     07A3  0873               	movf	?___lldiv+3,w
   696     07A4  00A7               	movwf	main@temperatura+3
   697     07A5  0872               	movf	?___lldiv+2,w
   698     07A6  00A6               	movwf	main@temperatura+2
   699     07A7  0871               	movf	?___lldiv+1,w
   700     07A8  00A5               	movwf	main@temperatura+1
   701     07A9  0870               	movf	?___lldiv,w
   702     07AA  00A4               	movwf	main@temperatura
   703                           
   704                           ;newmain.c: 26: temperatura = temperatura/10;
   705     07AB  3000               	movlw	0
   706     07AC  00F3               	movwf	___lldiv@divisor+3
   707     07AD  3000               	movlw	0
   708     07AE  00F2               	movwf	___lldiv@divisor+2
   709     07AF  3000               	movlw	0
   710     07B0  00F1               	movwf	___lldiv@divisor+1
   711     07B1  300A               	movlw	10
   712     07B2  00F0               	movwf	___lldiv@divisor
   713     07B3  0827               	movf	main@temperatura+3,w
   714     07B4  00F7               	movwf	___lldiv@dividend+3
   715     07B5  0826               	movf	main@temperatura+2,w
   716     07B6  00F6               	movwf	___lldiv@dividend+2
   717     07B7  0825               	movf	main@temperatura+1,w
   718     07B8  00F5               	movwf	___lldiv@dividend+1
   719     07B9  0824               	movf	main@temperatura,w
   720     07BA  00F4               	movwf	___lldiv@dividend
   721     07BB  120A  118A  2661  120A  118A  	fcall	___lldiv
   722     07C0  0873               	movf	?___lldiv+3,w
   723     07C1  00A7               	movwf	main@temperatura+3
   724     07C2  0872               	movf	?___lldiv+2,w
   725     07C3  00A6               	movwf	main@temperatura+2
   726     07C4  0871               	movf	?___lldiv+1,w
   727     07C5  00A5               	movwf	main@temperatura+1
   728     07C6  0870               	movf	?___lldiv,w
   729     07C7  00A4               	movwf	main@temperatura
   730                           
   731                           ;newmain.c: 28: PORTE = 0x00;
   732     07C8  0189               	clrf	9	;volatile
   733                           
   734                           ;newmain.c: 29: PORTD = 0x00;
   735     07C9  0188               	clrf	8	;volatile
   736                           
   737                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
   738                           ; Switch size 1, requested type "simple"
   739                           ; Number of cases is 1, Range of values is 0 to 0
   740                           ; switch strategies available:
   741                           ; Name         Instructions Cycles
   742                           ; simple_byte            4     3 (average)
   743                           ; direct_byte           11     8 (fixed)
   744                           ; jumptable            260     6 (fixed)
   745                           ;	Chosen strategy is simple_byte
   746     07CA  0827               	movf	main@temperatura+3,w
   747     07CB  3A00               	xorlw	0	; case 0
   748     07CC  1903               	skipnz
   749     07CD  2FF4               	goto	l1096
   750     07CE  2F63               	goto	l946
   751     07CF                     l1094:
   752                           
   753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   754                           ; Switch size 1, requested type "simple"
   755                           ; Number of cases is 1, Range of values is 0 to 0
   756                           ; switch strategies available:
   757                           ; Name         Instructions Cycles
   758                           ; simple_byte            4     3 (average)
   759                           ; direct_byte           11     8 (fixed)
   760                           ; jumptable            260     6 (fixed)
   761                           ;	Chosen strategy is simple_byte
   762     07CF  0825               	movf	main@temperatura+1,w
   763     07D0  3A00               	xorlw	0	; case 0
   764     07D1  1903               	skipnz
   765     07D2  2FD4               	goto	l1098
   766     07D3  2F63               	goto	l946
   767     07D4                     l1098:
   768                           
   769                           ; Switch size 1, requested type "simple"
   770                           ; Number of cases is 10, Range of values is 1 to 10
   771                           ; switch strategies available:
   772                           ; Name         Instructions Cycles
   773                           ; simple_byte           31    16 (average)
   774                           ; direct_byte           41    11 (fixed)
   775                           ; jumptable            263     9 (fixed)
   776                           ;	Chosen strategy is simple_byte
   777     07D4  0824               	movf	main@temperatura,w
   778     07D5  3A01               	xorlw	1	; case 1
   779     07D6  1903               	skipnz
   780     07D7  2F62               	goto	l980
   781     07D8  3A03               	xorlw	3	; case 2
   782     07D9  1903               	skipnz
   783     07DA  2F5E               	goto	l978
   784     07DB  3A01               	xorlw	1	; case 3
   785     07DC  1903               	skipnz
   786     07DD  2F5A               	goto	l976
   787     07DE  3A07               	xorlw	7	; case 4
   788     07DF  1903               	skipnz
   789     07E0  2F56               	goto	l974
   790     07E1  3A01               	xorlw	1	; case 5
   791     07E2  1903               	skipnz
   792     07E3  2F52               	goto	l972
   793     07E4  3A03               	xorlw	3	; case 6
   794     07E5  1903               	skipnz
   795     07E6  2F4E               	goto	l970
   796     07E7  3A01               	xorlw	1	; case 7
   797     07E8  1903               	skipnz
   798     07E9  2F4A               	goto	l968
   799     07EA  3A0F               	xorlw	15	; case 8
   800     07EB  1903               	skipnz
   801     07EC  2F34               	goto	l962
   802     07ED  3A01               	xorlw	1	; case 9
   803     07EE  1903               	skipnz
   804     07EF  2F33               	goto	l960
   805     07F0  3A03               	xorlw	3	; case 10
   806     07F1  1903               	skipnz
   807     07F2  2F2F               	goto	l958
   808     07F3  2F63               	goto	l946
   809     07F4                     l1096:
   810                           
   811                           ; Switch size 1, requested type "simple"
   812                           ; Number of cases is 1, Range of values is 0 to 0
   813                           ; switch strategies available:
   814                           ; Name         Instructions Cycles
   815                           ; simple_byte            4     3 (average)
   816                           ; direct_byte           11     8 (fixed)
   817                           ; jumptable            260     6 (fixed)
   818                           ;	Chosen strategy is simple_byte
   819     07F4  0826               	movf	main@temperatura+2,w
   820     07F5  3A00               	xorlw	0	; case 0
   821     07F6  1903               	skipnz
   822     07F7  2FCF               	goto	l1094
   823     07F8  2F63               	goto	l946
   824     07F9  120A  118A  2800   	ljmp	start
   825     07FC                     __end_of_main:
   826                           
   827                           	psect	text1
   828     06BF                     __ptext1:	
   829 ;; *************** function _leer_ADC *****************
   830 ;; Defined at:
   831 ;;		line 29 in file "adc.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;		None
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  i               2    2[BANK0 ] int 
   836 ;;  lectura         2    0[BANK0 ] int 
   837 ;; Return value:  Size  Location     Type
   838 ;;                  2    0[COMMON] int 
   839 ;; Registers used:
   840 ;;		wreg, status,2, status,0, btemp+1
   841 ;; Tracked objects:
   842 ;;		On entry : 300/0
   843 ;;		On exit  : 300/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   846 ;;      Params:         2       0       0       0       0
   847 ;;      Locals:         0       4       0       0       0
   848 ;;      Temps:          9       0       0       0       0
   849 ;;      Totals:        11       4       0       0       0
   850 ;;Total ram usage:       15 bytes
   851 ;; Hardware stack levels used: 1
   852 ;; This function calls:
   853 ;;		Nothing
   854 ;; This function is called by:
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859     06BF                     _leer_ADC:	
   860                           ;psect for function _leer_ADC
   861                           
   862                           
   863                           ;adc.c: 31: int lectura, i = 0;
   864                           
   865                           ;incstack = 0
   866                           ; Regs used in _leer_ADC: [wreg+status,2+status,0+btemp+1]
   867     06BF  01A2               	clrf	leer_ADC@i
   868     06C0  01A3               	clrf	leer_ADC@i+1
   869                           
   870                           ;adc.c: 32: ADCON0bits.GO_DONE = 1;
   871     06C1  149F               	bsf	31,1	;volatile
   872     06C2                     l876:
   873                           
   874                           ;adc.c: 34: if(ADCON1bits.ADFM == 1)
   875     06C2  1683               	bsf	3,5	;RP0=1, select bank1
   876     06C3  1F9F               	btfss	31,7	;volatile
   877     06C4  2EDF               	goto	l880
   878                           
   879                           ;adc.c: 35: {;adc.c: 36: lectura = ((ADRESH << 8) & 0b1100000000) | ADRESL;
   880     06C5  081E               	movf	30,w	;volatile
   881     06C6  00F2               	movwf	??_leer_ADC
   882     06C7  01F3               	clrf	??_leer_ADC+1
   883     06C8  1283               	bcf	3,5	;RP0=0, select bank0
   884     06C9  081E               	movf	30,w	;volatile
   885     06CA  00F4               	movwf	??_leer_ADC+2
   886     06CB  01F5               	clrf	??_leer_ADC+3
   887     06CC  0874               	movf	??_leer_ADC+2,w
   888     06CD  00F5               	movwf	??_leer_ADC+3
   889     06CE  01F4               	clrf	??_leer_ADC+2
   890     06CF  3000               	movlw	0
   891     06D0  0574               	andwf	??_leer_ADC+2,w
   892     06D1  00F6               	movwf	??_leer_ADC+4
   893     06D2  3003               	movlw	3
   894     06D3  0575               	andwf	??_leer_ADC+3,w
   895     06D4  00F7               	movwf	??_leer_ADC+5
   896     06D5  0872               	movf	??_leer_ADC,w
   897     06D6  0476               	iorwf	??_leer_ADC+4,w
   898     06D7  00F8               	movwf	??_leer_ADC+6
   899     06D8  0873               	movf	??_leer_ADC+1,w
   900     06D9  0477               	iorwf	??_leer_ADC+5,w
   901     06DA  00F9               	movwf	??_leer_ADC+7
   902     06DB  0878               	movf	??_leer_ADC+6,w
   903     06DC  00A0               	movwf	leer_ADC@lectura
   904     06DD  0879               	movf	??_leer_ADC+7,w
   905     06DE  00A1               	movwf	leer_ADC@lectura+1
   906     06DF                     l880:
   907                           
   908                           ;adc.c: 37: };adc.c: 38: if(ADCON1bits.ADFM == 0)
   909     06DF  1683               	bsf	3,5	;RP0=1, select bank1
   910     06E0  1B9F               	btfsc	31,7	;volatile
   911     06E1  2F08               	goto	l884
   912                           
   913                           ;adc.c: 39: {;adc.c: 40: lectura = ((ADRESH << 2) & 0b1111111100) | ((ADRESL>>6) & 0b000
      +                          0000011);
   914     06E2  081E               	movf	30,w	;volatile
   915     06E3  00F2               	movwf	??_leer_ADC
   916     06E4  3006               	movlw	6
   917     06E5                     u215:
   918     06E5  1003               	clrc
   919     06E6  0CF2               	rrf	??_leer_ADC,f
   920     06E7  3EFF               	addlw	-1
   921     06E8  1D03               	skipz
   922     06E9  2EE5               	goto	u215
   923     06EA  0872               	movf	??_leer_ADC,w
   924     06EB  3903               	andlw	3
   925     06EC  00F3               	movwf	??_leer_ADC+1
   926     06ED  01F4               	clrf	??_leer_ADC+2
   927     06EE  1283               	bcf	3,5	;RP0=0, select bank0
   928     06EF  081E               	movf	30,w	;volatile
   929     06F0  00F5               	movwf	??_leer_ADC+3
   930     06F1  01F6               	clrf	??_leer_ADC+4
   931     06F2  1003               	clrc
   932     06F3  0DF5               	rlf	??_leer_ADC+3,f
   933     06F4  0DF6               	rlf	??_leer_ADC+4,f
   934     06F5  1003               	clrc
   935     06F6  0DF5               	rlf	??_leer_ADC+3,f
   936     06F7  0DF6               	rlf	??_leer_ADC+4,f
   937     06F8  30FC               	movlw	252
   938     06F9  0575               	andwf	??_leer_ADC+3,w
   939     06FA  00F7               	movwf	??_leer_ADC+5
   940     06FB  3003               	movlw	3
   941     06FC  0576               	andwf	??_leer_ADC+4,w
   942     06FD  00F8               	movwf	??_leer_ADC+6
   943     06FE  0873               	movf	??_leer_ADC+1,w
   944     06FF  0477               	iorwf	??_leer_ADC+5,w
   945     0700  00F9               	movwf	??_leer_ADC+7
   946     0701  0874               	movf	??_leer_ADC+2,w
   947     0702  0478               	iorwf	??_leer_ADC+6,w
   948     0703  00FA               	movwf	??_leer_ADC+8
   949     0704  0879               	movf	??_leer_ADC+7,w
   950     0705  00A0               	movwf	leer_ADC@lectura
   951     0706  087A               	movf	??_leer_ADC+8,w
   952     0707  00A1               	movwf	leer_ADC@lectura+1
   953     0708                     l884:
   954                           
   955                           ;adc.c: 41: };adc.c: 42: i++;
   956     0708  3001               	movlw	1
   957     0709  1283               	bcf	3,5	;RP0=0, select bank0
   958     070A  07A2               	addwf	leer_ADC@i,f
   959     070B  1803               	skipnc
   960     070C  0AA3               	incf	leer_ADC@i+1,f
   961     070D  3000               	movlw	0
   962     070E  07A3               	addwf	leer_ADC@i+1,f
   963                           
   964                           ;adc.c: 43: }while((i != 1000 ) && (ADCON0bits.GO_DONE) == 1);
   965     070F  30E8               	movlw	232
   966     0710  0622               	xorwf	leer_ADC@i,w
   967     0711  3003               	movlw	3
   968     0712  1903               	skipnz
   969     0713  0623               	xorwf	leer_ADC@i+1,w
   970     0714  1903               	btfsc	3,2
   971     0715  2F18               	goto	l890
   972     0716  189F               	btfsc	31,1	;volatile
   973     0717  2EC2               	goto	l876
   974     0718                     l890:
   975                           
   976                           ;adc.c: 44: return lectura;
   977     0718  0821               	movf	leer_ADC@lectura+1,w
   978     0719  00F1               	movwf	?_leer_ADC+1
   979     071A  0820               	movf	leer_ADC@lectura,w
   980     071B  00F0               	movwf	?_leer_ADC
   981     071C  0008               	return
   982     071D                     __end_of_leer_ADC:
   983                           
   984                           	psect	text2
   985     0600                     __ptext2:	
   986 ;; *************** function _init_ADC *****************
   987 ;; Defined at:
   988 ;;		line 3 in file "adc.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;		None
   991 ;; Auto vars:     Size  Location     Type
   992 ;;		None
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, status,2, status,0, pclath, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : B00/300
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1002 ;;      Params:         0       0       0       0       0
  1003 ;;      Locals:         0       0       0       0       0
  1004 ;;      Temps:          3       0       0       0       0
  1005 ;;      Totals:         3       0       0       0       0
  1006 ;;Total ram usage:        3 bytes
  1007 ;; Hardware stack levels used: 1
  1008 ;; Hardware stack levels required when called: 1
  1009 ;; This function calls:
  1010 ;;		_set_CHANNEL
  1011 ;; This function is called by:
  1012 ;;		_main
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016     0600                     _init_ADC:	
  1017                           ;psect for function _init_ADC
  1018                           
  1019                           
  1020                           ;adc.c: 7: TRISAbits.TRISA0 = 1;
  1021                           
  1022                           ;incstack = 0
  1023                           ; Regs used in _init_ADC: [wreg+status,2+status,0+pclath+cstack]
  1024     0600  1303               	bcf	3,6	;RP1=0, select bank1
  1025     0601  1405               	bsf	5,0	;volatile
  1026                           
  1027                           ;adc.c: 8: ANSELbits.ANS0 = 1;
  1028     0602  1703               	bsf	3,6	;RP1=1, select bank3
  1029     0603  1408               	bsf	8,0	;volatile
  1030                           
  1031                           ;adc.c: 9: set_CHANNEL(0);
  1032     0604  3000               	movlw	0
  1033     0605  120A  118A  25F3  120A  118A  	fcall	_set_CHANNEL
  1034                           
  1035                           ;adc.c: 10: ADCON0bits.ADCS = 0b010;
  1036     060A  081F               	movf	31,w	;volatile
  1037     060B  393F               	andlw	-193
  1038     060C  3880               	iorlw	128
  1039     060D  009F               	movwf	31	;volatile
  1040                           
  1041                           ;adc.c: 11: ADCON1bits.ADFM = 1;
  1042     060E  1683               	bsf	3,5	;RP0=1, select bank1
  1043     060F  179F               	bsf	31,7	;volatile
  1044                           
  1045                           ;adc.c: 12: ADCON1bits.VCFG1 = 0;
  1046     0610  129F               	bcf	31,5	;volatile
  1047                           
  1048                           ;adc.c: 13: ADCON1bits.VCFG0 = 0;
  1049     0611  121F               	bcf	31,4	;volatile
  1050                           
  1051                           ;adc.c: 14: ADCON0bits.ADON = 1;
  1052     0612  1283               	bcf	3,5	;RP0=0, select bank0
  1053     0613  141F               	bsf	31,0	;volatile
  1054                           
  1055                           ;adc.c: 15: _delay((unsigned long)((100)*(8000000/4000.0)));
  1056     0614  3002               	movlw	2
  1057     0615  00F4               	movwf	??_init_ADC+2
  1058     0616  3004               	movlw	4
  1059     0617  00F3               	movwf	??_init_ADC+1
  1060     0618  30BA               	movlw	186
  1061     0619  00F2               	movwf	??_init_ADC
  1062     061A                     u377:
  1063     061A  0BF2               	decfsz	??_init_ADC,f
  1064     061B  2E1A               	goto	u377
  1065     061C  0BF3               	decfsz	??_init_ADC+1,f
  1066     061D  2E1A               	goto	u377
  1067     061E  0BF4               	decfsz	??_init_ADC+2,f
  1068     061F  2E1A               	goto	u377
  1069     0620  0000               	nop
  1070     0621  0008               	return
  1071     0622                     __end_of_init_ADC:
  1072                           
  1073                           	psect	text3
  1074     05F3                     __ptext3:	
  1075 ;; *************** function _set_CHANNEL *****************
  1076 ;; Defined at:
  1077 ;;		line 18 in file "adc.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;  channel         1    wreg     unsigned char 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  channel         1    1[COMMON] unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0
  1086 ;; Tracked objects:
  1087 ;;		On entry : B00/300
  1088 ;;		On exit  : B00/0
  1089 ;;		Unchanged: 800/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1091 ;;      Params:         0       0       0       0       0
  1092 ;;      Locals:         1       0       0       0       0
  1093 ;;      Temps:          1       0       0       0       0
  1094 ;;      Totals:         2       0       0       0       0
  1095 ;;Total ram usage:        2 bytes
  1096 ;; Hardware stack levels used: 1
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_init_ADC
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104     05F3                     _set_CHANNEL:	
  1105                           ;psect for function _set_CHANNEL
  1106                           
  1107                           
  1108                           ;incstack = 0
  1109                           ; Regs used in _set_CHANNEL: [wreg+status,2+status,0]
  1110                           ;set_CHANNEL@channel stored from wreg
  1111     05F3  00F1               	movwf	set_CHANNEL@channel
  1112                           
  1113                           ;adc.c: 21: {;adc.c: 22: ADCON0bits.CHS = channel;
  1114     05F4  0871               	movf	set_CHANNEL@channel,w
  1115     05F5  00F0               	movwf	??_set_CHANNEL
  1116     05F6  0DF0               	rlf	??_set_CHANNEL,f
  1117     05F7  0DF0               	rlf	??_set_CHANNEL,f
  1118     05F8  1283               	bcf	3,5	;RP0=0, select bank0
  1119     05F9  1303               	bcf	3,6	;RP1=0, select bank0
  1120     05FA  081F               	movf	31,w	;volatile
  1121     05FB  0670               	xorwf	??_set_CHANNEL,w
  1122     05FC  39C3               	andlw	-61
  1123     05FD  0670               	xorwf	??_set_CHANNEL,w
  1124     05FE  009F               	movwf	31	;volatile
  1125                           
  1126                           ;adc.c: 23: }else
  1127     05FF  0008               	return
  1128     0600                     __end_of_set_CHANNEL:
  1129                           
  1130                           	psect	text4
  1131     05ED                     __ptext4:	
  1132 ;; *************** function _config_HAL *****************
  1133 ;; Defined at:
  1134 ;;		line 64 in file "newmain.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;		None
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      void 
  1141 ;; Registers used:
  1142 ;;		status,2
  1143 ;; Tracked objects:
  1144 ;;		On entry : B00/100
  1145 ;;		On exit  : B00/300
  1146 ;;		Unchanged: 800/0
  1147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1148 ;;      Params:         0       0       0       0       0
  1149 ;;      Locals:         0       0       0       0       0
  1150 ;;      Temps:          0       0       0       0       0
  1151 ;;      Totals:         0       0       0       0       0
  1152 ;;Total ram usage:        0 bytes
  1153 ;; Hardware stack levels used: 1
  1154 ;; This function calls:
  1155 ;;		Nothing
  1156 ;; This function is called by:
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161     05ED                     _config_HAL:	
  1162                           ;psect for function _config_HAL
  1163                           
  1164                           
  1165                           ;newmain.c: 66: TRISD = 0x00;
  1166                           
  1167                           ;incstack = 0
  1168                           ; Regs used in _config_HAL: [status,2]
  1169     05ED  0188               	clrf	8	;volatile
  1170                           
  1171                           ;newmain.c: 67: TRISE = 0x00;
  1172     05EE  0189               	clrf	9	;volatile
  1173                           
  1174                           ;newmain.c: 68: ANSEL = 0x00;
  1175     05EF  1703               	bsf	3,6	;RP1=1, select bank3
  1176     05F0  0188               	clrf	8	;volatile
  1177                           
  1178                           ;newmain.c: 69: ANSELH = 0x00;
  1179     05F1  0189               	clrf	9	;volatile
  1180     05F2  0008               	return
  1181     05F3                     __end_of_config_HAL:
  1182                           
  1183                           	psect	text5
  1184     0622                     __ptext5:	
  1185 ;; *************** function ___lmul *****************
  1186 ;; Defined at:
  1187 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul32.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  multiplier      4    0[COMMON] unsigned long 
  1190 ;;  multiplicand    4    4[COMMON] unsigned long 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  product         4    9[COMMON] unsigned long 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  4    0[COMMON] unsigned long 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0
  1197 ;; Tracked objects:
  1198 ;;		On entry : 300/0
  1199 ;;		On exit  : 300/0
  1200 ;;		Unchanged: 300/0
  1201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1202 ;;      Params:         8       0       0       0       0
  1203 ;;      Locals:         4       0       0       0       0
  1204 ;;      Temps:          1       0       0       0       0
  1205 ;;      Totals:        13       0       0       0       0
  1206 ;;Total ram usage:       13 bytes
  1207 ;; Hardware stack levels used: 1
  1208 ;; This function calls:
  1209 ;;		Nothing
  1210 ;; This function is called by:
  1211 ;;		_main
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215     0622                     ___lmul:	
  1216                           ;psect for function ___lmul
  1217                           
  1218                           
  1219                           ;incstack = 0
  1220                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1221     0622  3000               	movlw	0
  1222     0623  00FC               	movwf	___lmul@product+3
  1223     0624  3000               	movlw	0
  1224     0625  00FB               	movwf	___lmul@product+2
  1225     0626  3000               	movlw	0
  1226     0627  00FA               	movwf	___lmul@product+1
  1227     0628  3000               	movlw	0
  1228     0629  00F9               	movwf	___lmul@product
  1229     062A                     l896:
  1230     062A  1C70               	btfss	___lmul@multiplier,0
  1231     062B  2E40               	goto	l900
  1232     062C  0874               	movf	___lmul@multiplicand,w
  1233     062D  07F9               	addwf	___lmul@product,f
  1234     062E  0875               	movf	___lmul@multiplicand+1,w
  1235     062F  1103               	clrz
  1236     0630  1803               	skipnc
  1237     0631  3E01               	addlw	1
  1238     0632  1D03               	btfss	3,2
  1239     0633  07FA               	addwf	___lmul@product+1,f
  1240     0634  0876               	movf	___lmul@multiplicand+2,w
  1241     0635  1103               	clrz
  1242     0636  1803               	skipnc
  1243     0637  3E01               	addlw	1
  1244     0638  1D03               	btfss	3,2
  1245     0639  07FB               	addwf	___lmul@product+2,f
  1246     063A  0877               	movf	___lmul@multiplicand+3,w
  1247     063B  1103               	clrz
  1248     063C  1803               	skipnc
  1249     063D  3E01               	addlw	1
  1250     063E  1D03               	btfss	3,2
  1251     063F  07FC               	addwf	___lmul@product+3,f
  1252     0640                     l900:
  1253     0640  3001               	movlw	1
  1254     0641  00F8               	movwf	??___lmul
  1255     0642                     u265:
  1256     0642  1003               	clrc
  1257     0643  0DF4               	rlf	___lmul@multiplicand,f
  1258     0644  0DF5               	rlf	___lmul@multiplicand+1,f
  1259     0645  0DF6               	rlf	___lmul@multiplicand+2,f
  1260     0646  0DF7               	rlf	___lmul@multiplicand+3,f
  1261     0647  0BF8               	decfsz	??___lmul,f
  1262     0648  2E42               	goto	u265
  1263     0649  3001               	movlw	1
  1264     064A                     u275:
  1265     064A  1003               	clrc
  1266     064B  0CF3               	rrf	___lmul@multiplier+3,f
  1267     064C  0CF2               	rrf	___lmul@multiplier+2,f
  1268     064D  0CF1               	rrf	___lmul@multiplier+1,f
  1269     064E  0CF0               	rrf	___lmul@multiplier,f
  1270     064F  3EFF               	addlw	-1
  1271     0650  1D03               	skipz
  1272     0651  2E4A               	goto	u275
  1273     0652  0873               	movf	___lmul@multiplier+3,w
  1274     0653  0472               	iorwf	___lmul@multiplier+2,w
  1275     0654  0471               	iorwf	___lmul@multiplier+1,w
  1276     0655  0470               	iorwf	___lmul@multiplier,w
  1277     0656  1D03               	skipz
  1278     0657  2E2A               	goto	l896
  1279     0658  087C               	movf	___lmul@product+3,w
  1280     0659  00F3               	movwf	?___lmul+3
  1281     065A  087B               	movf	___lmul@product+2,w
  1282     065B  00F2               	movwf	?___lmul+2
  1283     065C  087A               	movf	___lmul@product+1,w
  1284     065D  00F1               	movwf	?___lmul+1
  1285     065E  0879               	movf	___lmul@product,w
  1286     065F  00F0               	movwf	?___lmul
  1287     0660  0008               	return
  1288     0661                     __end_of___lmul:
  1289                           
  1290                           	psect	text6
  1291     0661                     __ptext6:	
  1292 ;; *************** function ___lldiv *****************
  1293 ;; Defined at:
  1294 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;  divisor         4    0[COMMON] unsigned long 
  1297 ;;  dividend        4    4[COMMON] unsigned long 
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  quotient        4    9[COMMON] unsigned long 
  1300 ;;  counter         1   13[COMMON] unsigned char 
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  4    0[COMMON] unsigned long 
  1303 ;; Registers used:
  1304 ;;		wreg, status,2, status,0, btemp+1
  1305 ;; Tracked objects:
  1306 ;;		On entry : 300/0
  1307 ;;		On exit  : 300/0
  1308 ;;		Unchanged: 300/0
  1309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1310 ;;      Params:         8       0       0       0       0
  1311 ;;      Locals:         5       0       0       0       0
  1312 ;;      Temps:          1       0       0       0       0
  1313 ;;      Totals:        14       0       0       0       0
  1314 ;;Total ram usage:       14 bytes
  1315 ;; Hardware stack levels used: 1
  1316 ;; This function calls:
  1317 ;;		Nothing
  1318 ;; This function is called by:
  1319 ;;		_main
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323     0661                     ___lldiv:	
  1324                           ;psect for function ___lldiv
  1325                           
  1326                           
  1327                           ;incstack = 0
  1328                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1329     0661  3000               	movlw	0
  1330     0662  00FC               	movwf	___lldiv@quotient+3
  1331     0663  3000               	movlw	0
  1332     0664  00FB               	movwf	___lldiv@quotient+2
  1333     0665  3000               	movlw	0
  1334     0666  00FA               	movwf	___lldiv@quotient+1
  1335     0667  3000               	movlw	0
  1336     0668  00F9               	movwf	___lldiv@quotient
  1337     0669  0873               	movf	___lldiv@divisor+3,w
  1338     066A  0472               	iorwf	___lldiv@divisor+2,w
  1339     066B  0471               	iorwf	___lldiv@divisor+1,w
  1340     066C  0470               	iorwf	___lldiv@divisor,w
  1341     066D  1903               	skipnz
  1342     066E  2EB6               	goto	l930
  1343     066F  01FD               	clrf	___lldiv@counter
  1344     0670  0AFD               	incf	___lldiv@counter,f
  1345     0671                     l916:
  1346     0671  1BF3               	btfsc	___lldiv@divisor+3,7
  1347     0672  2E81               	goto	l918
  1348     0673  3001               	movlw	1
  1349     0674  00F8               	movwf	??___lldiv
  1350     0675                     u305:
  1351     0675  1003               	clrc
  1352     0676  0DF0               	rlf	___lldiv@divisor,f
  1353     0677  0DF1               	rlf	___lldiv@divisor+1,f
  1354     0678  0DF2               	rlf	___lldiv@divisor+2,f
  1355     0679  0DF3               	rlf	___lldiv@divisor+3,f
  1356     067A  0BF8               	decfsz	??___lldiv,f
  1357     067B  2E75               	goto	u305
  1358     067C  3001               	movlw	1
  1359     067D  00FF               	movwf	127
  1360     067E  087F               	movf	127,w
  1361     067F  07FD               	addwf	___lldiv@counter,f
  1362     0680  2E71               	goto	l916
  1363     0681                     l918:
  1364     0681  3001               	movlw	1
  1365     0682  00F8               	movwf	??___lldiv
  1366     0683                     u325:
  1367     0683  1003               	clrc
  1368     0684  0DF9               	rlf	___lldiv@quotient,f
  1369     0685  0DFA               	rlf	___lldiv@quotient+1,f
  1370     0686  0DFB               	rlf	___lldiv@quotient+2,f
  1371     0687  0DFC               	rlf	___lldiv@quotient+3,f
  1372     0688  0BF8               	decfsz	??___lldiv,f
  1373     0689  2E83               	goto	u325
  1374     068A  0873               	movf	___lldiv@divisor+3,w
  1375     068B  0277               	subwf	___lldiv@dividend+3,w
  1376     068C  1D03               	skipz
  1377     068D  2E98               	goto	u335
  1378     068E  0872               	movf	___lldiv@divisor+2,w
  1379     068F  0276               	subwf	___lldiv@dividend+2,w
  1380     0690  1D03               	skipz
  1381     0691  2E98               	goto	u335
  1382     0692  0871               	movf	___lldiv@divisor+1,w
  1383     0693  0275               	subwf	___lldiv@dividend+1,w
  1384     0694  1D03               	skipz
  1385     0695  2E98               	goto	u335
  1386     0696  0870               	movf	___lldiv@divisor,w
  1387     0697  0274               	subwf	___lldiv@dividend,w
  1388     0698                     u335:
  1389     0698  1C03               	skipc
  1390     0699  2EA9               	goto	l926
  1391     069A  0870               	movf	___lldiv@divisor,w
  1392     069B  02F4               	subwf	___lldiv@dividend,f
  1393     069C  0871               	movf	___lldiv@divisor+1,w
  1394     069D  1C03               	skipc
  1395     069E  0F71               	incfsz	___lldiv@divisor+1,w
  1396     069F  02F5               	subwf	___lldiv@dividend+1,f
  1397     06A0  0872               	movf	___lldiv@divisor+2,w
  1398     06A1  1C03               	skipc
  1399     06A2  0F72               	incfsz	___lldiv@divisor+2,w
  1400     06A3  02F6               	subwf	___lldiv@dividend+2,f
  1401     06A4  0873               	movf	___lldiv@divisor+3,w
  1402     06A5  1C03               	skipc
  1403     06A6  0F73               	incfsz	___lldiv@divisor+3,w
  1404     06A7  02F7               	subwf	___lldiv@dividend+3,f
  1405     06A8  1479               	bsf	___lldiv@quotient,0
  1406     06A9                     l926:
  1407     06A9  3001               	movlw	1
  1408     06AA                     u345:
  1409     06AA  1003               	clrc
  1410     06AB  0CF3               	rrf	___lldiv@divisor+3,f
  1411     06AC  0CF2               	rrf	___lldiv@divisor+2,f
  1412     06AD  0CF1               	rrf	___lldiv@divisor+1,f
  1413     06AE  0CF0               	rrf	___lldiv@divisor,f
  1414     06AF  3EFF               	addlw	-1
  1415     06B0  1D03               	skipz
  1416     06B1  2EAA               	goto	u345
  1417     06B2  3001               	movlw	1
  1418     06B3  02FD               	subwf	___lldiv@counter,f
  1419     06B4  1D03               	btfss	3,2
  1420     06B5  2E81               	goto	l918
  1421     06B6                     l930:
  1422     06B6  087C               	movf	___lldiv@quotient+3,w
  1423     06B7  00F3               	movwf	?___lldiv+3
  1424     06B8  087B               	movf	___lldiv@quotient+2,w
  1425     06B9  00F2               	movwf	?___lldiv+2
  1426     06BA  087A               	movf	___lldiv@quotient+1,w
  1427     06BB  00F1               	movwf	?___lldiv+1
  1428     06BC  0879               	movf	___lldiv@quotient,w
  1429     06BD  00F0               	movwf	?___lldiv
  1430     06BE  0008               	return
  1431     06BF                     __end_of___lldiv:
  1432     007E                     btemp	set	126	;btemp
  1433     007E                     wtemp0	set	126
  1434                           
  1435                           	psect	config
  1436                           
  1437                           ;Config register CONFIG1 @ 0x2007
  1438                           ;	Oscillator Selection bits
  1439                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1440                           ;	Watchdog Timer Enable bit
  1441                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1442                           ;	Power-up Timer Enable bit
  1443                           ;	PWRTE = OFF, PWRT disabled
  1444                           ;	RE3/MCLR pin function select bit
  1445                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1446                           ;	Code Protection bit
  1447                           ;	CP = OFF, Program memory code protection is disabled
  1448                           ;	Data Code Protection bit
  1449                           ;	CPD = OFF, Data memory code protection is disabled
  1450                           ;	Brown Out Reset Selection bits
  1451                           ;	BOREN = OFF, BOR disabled
  1452                           ;	Internal External Switchover bit
  1453                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1454                           ;	Fail-Safe Clock Monitor Enabled bit
  1455                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1456                           ;	Low Voltage Programming Enable bit
  1457                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1458                           ;	In-Circuit Debugger Mode bit
  1459                           ;	DEBUG = 0x1, unprogrammed default
  1460     2007                     	org	8199
  1461     2007  20D4               	dw	8404
  1462                           
  1463                           ;Config register CONFIG2 @ 0x2008
  1464                           ;	Brown-out Reset Selection bit
  1465                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1466                           ;	Flash Program Memory Self Write Enable bits
  1467                           ;	WRT = OFF, Write protection off
  1468     2008                     	org	8200
  1469     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lldiv
    _init_ADC->_set_CHANNEL

Critical Paths under _main in BANK0

    _main->_leer_ADC

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     823
                                              4 BANK0      4     4      0
                            ___lldiv
                             ___lmul
                         _config_HAL
                           _init_ADC
                           _leer_ADC
 ---------------------------------------------------------------------------------
 (1) _leer_ADC                                            15    13      2      48
                                              0 COMMON    11     9      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             3     3      0      22
                                              2 COMMON     3     3      0
                        _set_CHANNEL
 ---------------------------------------------------------------------------------
 (2) _set_CHANNEL                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _config_HAL                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     220
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     418
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
   ___lmul
   _config_HAL
   _init_ADC
     _set_CHANNEL
   _leer_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8       8       5       10.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Apr 13 22:46:05 2023

                    l900 0640                      l930 06B6                      l916 0671  
                    l926 06A9                      l918 0681                      l880 06DF  
                    l960 0733                      l890 0718                      l970 074E  
                    l962 0734                      l946 0763                      l884 0708  
                    l876 06C2                      l980 0762                      l972 0752  
                    l974 0756                      l966 0746                      l958 072F  
                    l896 062A                      l976 075A                      l968 074A  
                    l978 075E                      u215 06E5                      u305 0675  
                    u325 0683                      u335 0698                      u345 06AA  
                    u265 0642                      u275 064A                      u363 0741  
                    u377 061A                     l1094 07CF                     l1096 07F4  
                   l1098 07D4                     _main 071D                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
        __end_of___lldiv 06BF                    _PORTD 0008                    _PORTE 0009  
                  _TRISD 0088                    _TRISE 0089      ___lmul@multiplicand 0074  
                  status 0003                    wtemp0 007E             ?_set_CHANNEL 0070  
        __initialization 07FC             __end_of_main 07FC                   ??_main 007E  
                 _ADRESH 001E                   _ADRESL 009E                   _ANSELH 0189  
       __end_of_leer_ADC 071D                   ___lmul 0622                ??___lldiv 0078  
       __end_of_init_ADC 0622  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 071D                  ?___lmul 0070           ___lmul@product 0079  
             _config_HAL 05ED                ?_leer_ADC 0070                ?_init_ADC 0070  
                ___lldiv 0661                _ANSELbits 0188                  __ptext1 06BF  
                __ptext2 0600                  __ptext3 05F3                  __ptext4 05ED  
                __ptext5 0622                  __ptext6 0661               ??_leer_ADC 0072  
   end_of_initialization 07FC               ??_init_ADC 0072          ___lldiv@divisor 0070  
        ___lldiv@counter 007D              ?_config_HAL 0070                _TRISAbits 0085  
         __end_of___lmul 0661      start_initialization 07FC                 ??___lmul 0078  
              ___latbits 0002            __pcstackBANK0 0020            ??_set_CHANNEL 0070  
               ?___lldiv 0070      __end_of_set_CHANNEL 0600               _ADCON0bits 001F  
             _ADCON1bits 009F             ??_config_HAL 0070                leer_ADC@i 0022  
      ___lmul@multiplier 0070          leer_ADC@lectura 0020       __end_of_config_HAL 05F3  
     set_CHANNEL@channel 0071                 _leer_ADC 06BF                 _init_ADC 0600  
            _set_CHANNEL 05F3          main@temperatura 0024         ___lldiv@dividend 0074  
             _OSCCONbits 008F         ___lldiv@quotient 0079  
